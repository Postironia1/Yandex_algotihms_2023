#include <iostream>
#include <vector>
#include <functional>

template <typename RandomIt, typename Compare, typename K>
int CountElementsLessThanPivot(RandomIt first, RandomIt last, const Compare& comp, const K pivot) {
    int count = 0; 

    for (RandomIt it = first; it != last; ++it) {
        if (comp(*it, pivot)) {
            count++;
        }
    }

    return count;
}

int main() {
    int N;
    std::cin >> N;
    std::vector<int> intVec(N);

    for (int i = 0; i < N; ++i) {
        std::cin >> intVec[i];
    }

    int pivot;
    std::cin >> pivot;

    auto lessThan = [](int a, int b) { return a < b; };

    int count = CountElementsLessThanPivot(intVec.begin(), intVec.end(), lessThan, pivot);

    std::cout << count << std::endl << N - count;

    return 0;
}
